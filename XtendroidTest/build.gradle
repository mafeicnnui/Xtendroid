buildscript {scriptHandler->
    apply from: '../repositories.gradle', to: scriptHandler
    apply from: '../dependencies.gradle'
    dependencies {
        classpath(project.ext.build.xtend_android_gradle)
        classpath(project.ext.build.xtext_gradle)
    }
}

apply plugin: 'com.android.application'
apply plugin: 'org.xtext.android.xtend'
apply from: '../dependencies.gradle'

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile(project.ext.lib.xtend)
/*
  compile(project.ext.lib.android.support_v4)
  compile(project.ext.lib.android.appcompat_v7)
*/
  compile project(':Xtendroid')

  // testing
  androidTestCompile "com.android.support:support-annotations:${project.ext.android_sdk_support_ver}"
  androidTestCompile 'com.android.support.test:runner:0.4.1'
  androidTestCompile 'com.android.support.test:rules:0.4.1'
  androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'

  // can't use uiautomator with api level <18
//  androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'

  testCompile 'junit:junit:4.12'
}

repositories {
   jcenter()
}

android {
  compileSdkVersion(project.ext.compileSdkVersion)
  buildToolsVersion(project.ext.buildToolsVersion)

  defaultConfig {
    minSdkVersion project.ext.minSdkVersion
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  sourceSets {

    // Add external (instrumentation) unit tests
    // This was done to maintain compatibility with eclipse users
    String sharedTestDir = 'XtendroidTestCasesTest/src'
    test {
      java.srcDirs = [ sharedTestDir ]
    }
    androidTest {
      java.srcDirs = [ sharedTestDir ]
    }

    main {
      manifest { srcFile 'AndroidManifest.xml' }
      java.srcDirs = ['src']
      res.srcDirs = ['res']
      assets.srcDirs = ['assets']
      resources.srcDirs += ['src']
      aidl.srcDirs = ['src']
    }

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_7
      targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
      release {
        minifyEnabled false
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      }
    }

    lintOptions {
      abortOnError false
    }
    packagingOptions {
      exclude 'LICENSE.txt'
      exclude 'META-INF/ECLIPSE_.SF'
      exclude 'META-INF/ECLIPSE_.RSA'
    }  
  }
}